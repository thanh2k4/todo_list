name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: '0'
          MYSQL_DATABASE: todo_list
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Determine change type
      id: change-type
      run: |
        if [ "$(git rev-list --count HEAD)" -eq 0 ]; then
          echo "change_type=init" >> $GITHUB_OUTPUT
        else
          if git diff --name-only HEAD^ HEAD | grep -Eq '^todo-(backend|frontend)/src/'; then
            echo "change_type=feature" >> $GITHUB_OUTPUT
          elif git diff --name-only HEAD^ HEAD | grep -Eq 'pom\.xml|package\.json'; then
            echo "change_type=dependency" >> $GITHUB_OUTPUT
          else
            echo "change_type=other" >> $GITHUB_OUTPUT
          fi
        fi

  
    - name: Build and test backend
      run: |
        cd todo-backend
        mvn clean install
        # mvn test
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/todo_list?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: '0'

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/todo-frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Build and test frontend
      run: |
        cd todo-frontend
        npm install
        npm run build
        npm test
  
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          todo-backend/target/*.jar
          todo-frontend/build/**
        if-no-files-found: error

    - name: Save change type
      run: echo "${{ steps.change-type.outputs.change_type }}" > change-type.txt

    - name: Upload change type
      uses: actions/upload-artifact@v4
      with:
        name: change-type
        path: change-type.txt

